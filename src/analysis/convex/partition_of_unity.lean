/-
Copyright (c) 2022 Yury Kudryashov. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Author: Yury Kudryashov
-/

import topology.partition_of_unity
import analysis.convex.combination

/-!
-/

open set function
open_locale big_operators topological_space

variables {Œπ X E : Type*} [topological_space X] [add_comm_group E] [module ‚Ñù E]

lemma partition_of_unity.finsum_smul_mem_convex {s : set X} (f : partition_of_unity Œπ X s)
  {g : Œπ ‚Üí X ‚Üí E} {t : set E} {x : X} (hx : x ‚àà s) (hg : ‚àÄ i, f i x ‚â† 0 ‚Üí g i x ‚àà t)
  (ht : convex ‚Ñù t) :
  ‚àë·∂† i, f i x ‚Ä¢ g i x ‚àà t :=
ht.finsum_mem (Œª i, f.nonneg _ _) (f.sum_eq_one hx) hg

variables [normal_space X] [paracompact_space X] [topological_space E] [has_continuous_add E]
  [has_continuous_smul ‚Ñù E]

lemma exists_continuous_forall_mem_convex_of_local {t : X ‚Üí set E} (ht : ‚àÄ x, convex ‚Ñù (t x))
  (H : ‚àÄ x : X, ‚àÉ (U ‚àà ùìù x) (g : X ‚Üí E), continuous_on g U ‚àß ‚àÄ y ‚àà U, g y ‚àà t y) :
  ‚àÉ g : C(X, E), ‚àÄ x, g x ‚àà t x :=
begin
  choose U hU g hgc hgt using H,
  obtain ‚ü®f, hf‚ü© := partition_of_unity.exists_is_subordinate is_closed_univ (Œª x, interior (U x))
    (Œª x, is_open_interior) (Œª x hx, mem_Union.2 ‚ü®x, mem_interior_iff_mem_nhds.2 (hU x)‚ü©),
  refine ‚ü®‚ü®Œª x, ‚àë·∂† i, f i x ‚Ä¢ g i x, f.continuous_finsum_smul $ Œª i x hx, _‚ü©, Œª x, _‚ü©,
  { exact (hgc _).continuous_at (mem_interior_iff_mem_nhds.1 $ hf _ hx) },
  { refine f.finsum_smul_mem_convex (mem_univ x) (Œª i hi, hgt _ _ _) (ht _),
    exact interior_subset (hf _ $ subset_closure hi) }
end
